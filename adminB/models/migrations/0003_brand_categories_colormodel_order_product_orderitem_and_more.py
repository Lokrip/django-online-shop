# Generated by Django 5.0.3 on 2024-09-26 13:10

import django.core.validators
import django.db.models.deletion
import mptt.fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('models', '0002_user_date_of_birth_user_location_user_phone_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date update')),
            ],
            options={
                'verbose_name': 'Brand',
                'verbose_name_plural': 'Brands',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='models_bran_name_cd743c_idx')],
            },
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=50, unique=True, verbose_name='Сategory name')),
                ('slug', models.SlugField(blank=True, help_text='Unique category ID for URL', unique=True, verbose_name='Slug category name')),
                ('description', models.TextField(blank=True, max_length=5000, verbose_name='Сategory description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date update')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='models.categories')),
            ],
            options={
                'verbose_name': 'Сategory',
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ColorModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=50, unique=True, verbose_name='Color name')),
                ('color_icon', models.ImageField(upload_to='color/%Y/%m/%d/', verbose_name='Color image')),
                ('hex_code', models.CharField(max_length=7, verbose_name='HEX code')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date update')),
            ],
            options={
                'verbose_name': 'Color',
                'verbose_name_plural': 'Colors',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='models_colo_name_285ec6_idx')],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_token', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='Session Token')),
                ('order_status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled')], default='pending', max_length=20, verbose_name='Order Status')),
                ('order_date', models.DateTimeField(auto_now_add=True, verbose_name='Order Date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Total Price')),
                ('tax', models.DecimalField(decimal_places=2, default=0.0, max_digits=6, verbose_name='Tax')),
                ('discount', models.DecimalField(decimal_places=2, default=0.0, max_digits=6, verbose_name='Discount')),
                ('transaction_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Transaction ID')),
                ('customers', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Customers')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=150, verbose_name='Title product')),
                ('description', models.TextField(max_length=5000, verbose_name='Description product')),
                ('price', models.DecimalField(decimal_places=2, default=99.99, max_digits=10, verbose_name='Price Product')),
                ('slug', models.SlugField(blank=True, help_text='Unique tag ID for URL', unique=True, verbose_name='Slug product name')),
                ('status', models.CharField(choices=[('in_stock', 'In Stock'), ('out_of_stock', 'Out of Stock'), ('pre_order', 'Pre-order'), ('coming_soon', 'Coming Soon'), ('sold_out', 'Sold Out'), ('awaiting_restock', 'Awaiting Restock'), ('on_sale', 'On Sale'), ('new', 'New'), ('discontinued', 'Discontinued'), ('reserved', 'Awaiting Review')], default='reserved', max_length=30, verbose_name='status')),
                ('discount', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Discount (%)')),
                ('image', models.ImageField(blank=True, null=True, upload_to='product/images/%Y/%m/%d/', verbose_name='Product Image')),
                ('stock', models.PositiveIntegerField(default=0, verbose_name='Quantity in stock')),
                ('summary', models.PositiveIntegerField(default=0, verbose_name='Total price')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date update')),
                ('brand', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='models.brand', verbose_name='Brand')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='models.categories')),
                ('color', models.ManyToManyField(blank=True, to='models.colormodel', verbose_name='ManyToManyField to Color')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='product user')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, default=99.99, max_digits=10, verbose_name='Price Product')),
                ('quantity', models.PositiveIntegerField(default=0, verbose_name='Quantity')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date update')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='models.order', verbose_name='Order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='models.product', verbose_name='Order')),
            ],
            options={
                'verbose_name': 'OrderItem',
                'verbose_name_plural': 'OrderItems',
            },
        ),
        migrations.CreateModel(
            name='ProductImageModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='product/images/%Y/%m/%d/', verbose_name='Product Image')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date update')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='models.product', verbose_name='Product')),
            ],
            options={
                'verbose_name': 'Product Image',
                'verbose_name_plural': 'Product Images',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('contact_info', models.CharField(blank=True, max_length=250, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date update')),
            ],
            options={
                'verbose_name': 'Supplier',
                'verbose_name_plural': 'Suppliers',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='models_supp_name_73c2d8_idx')],
            },
        ),
        migrations.AddField(
            model_name='product',
            name='supplier',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='models.supplier', verbose_name='Supplier'),
        ),
        migrations.CreateModel(
            name='TagModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=50, unique=True, verbose_name='Tag name')),
                ('slug', models.SlugField(blank=True, help_text='Unique tag ID for URL', unique=True, verbose_name='Slug tag name')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Date update')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='models_tagm_name_40564d_idx'), models.Index(fields=['slug'], name='models_tagm_slug_7a5d47_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='categories',
            index=models.Index(fields=['name'], name='models_cate_name_0d986e_idx'),
        ),
        migrations.AddIndex(
            model_name='categories',
            index=models.Index(fields=['slug'], name='models_cate_slug_530f86_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['title'], name='models_prod_title_b666db_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['slug'], name='models_prod_slug_fd882a_idx'),
        ),
    ]
